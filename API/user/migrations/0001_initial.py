# Generated by Django 2.0.7 on 2019-06-11 22:44

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('auth_id', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True)),
                ('email', models.EmailField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar_cropped', models.CharField(blank=True, max_length=255, null=True)),
                ('patreon_level', models.IntegerField(default=0)),
                ('score_articles_seen', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='{}', max_length=9999), blank=True, default=list, null=True, size=None)),
                ('christmas_story_seen', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='{}', max_length=9999), blank=True, default=list, null=True, size=None)),
                ('christmas_achievement_1', models.BooleanField(default=False)),
                ('christmas_achievement_2', models.BooleanField(default=False)),
                ('score_article_achievement_owner', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=999)),
                ('slug', models.CharField(blank=True, max_length=999)),
                ('category', models.CharField(blank=True, max_length=999)),
                ('weight', models.IntegerField(blank=True, default=0)),
                ('description', models.CharField(blank=True, max_length=999)),
                ('game', models.CharField(blank=True, max_length=999)),
            ],
        ),
        migrations.CreateModel(
            name='AchievementMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('new', models.BooleanField(default=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Border',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=999)),
                ('slug', models.CharField(blank=True, max_length=999)),
                ('description', models.CharField(blank=True, max_length=999)),
            ],
        ),
        migrations.CreateModel(
            name='BorderMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('new', models.BooleanField(default=True)),
                ('border', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Border')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Preferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publicationNotificationPref', models.BooleanField(default='1')),
                ('userNotificationPref', models.BooleanField(default='1')),
                ('commentNotificationPref', models.BooleanField(default='1')),
                ('forumNotificationPref', models.BooleanField(default='1')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResetPasswordCode',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_password_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'reset_password_codes',
            },
        ),
        migrations.CreateModel(
            name='TagFollow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed_tags', to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_followed', to='general.CustomTag')),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=999)),
                ('slug', models.CharField(blank=True, max_length=999)),
                ('description', models.CharField(blank=True, max_length=999)),
            ],
        ),
        migrations.CreateModel(
            name='TitleMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('new', models.BooleanField(default=True)),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Title')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFriendship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow', models.BooleanField(default=False)),
                ('block', models.BooleanField(default=False)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='border',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='border', to='user.Title'),
        ),
        migrations.AddField(
            model_name='achievement',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='user.Title'),
        ),
        migrations.AlterUniqueTogether(
            name='userfriendship',
            unique_together={('friend', 'follower')},
        ),
        migrations.AlterUniqueTogether(
            name='tagfollow',
            unique_together={('tag', 'follower')},
        ),
    ]
